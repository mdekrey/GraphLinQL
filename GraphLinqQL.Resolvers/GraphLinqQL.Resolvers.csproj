<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45</TargetFrameworks>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>GraphLinqQL Resolvers</Title>
    <Description>
      Library for resolving GraphQL queries. Integrates well with Entity Framework Core by helping you create
      IQueryable objects from the passed GraphQL document and variables.

      Contains MSBuild and dotnet CLI targets for generating GraphLinqQL C# from GraphQL schemas.

      $(Description)
    </Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Collections.Immutable" Version="1.6.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\GraphLinqQL.MsBuildTask\GraphLinqQL.MsBuildTask.csproj" ReferenceOutputAssembly="false" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="ExcludeReferences" BeforeTargets="GenerateNuspec">
    <ItemGroup>
      <_FrameworkAssemblyReferences Remove="@(_FrameworkAssemblyReferences)" />
    </ItemGroup>
  </Target>
  <Target Name="UpdatePackageOutput" BeforeTargets="_GetPackageFiles">
    <PropertyGroup>
      <CustomTaskPath>$(BuildRootDir)GraphLinqQL.MsBuildTask/$(OutputPath)</CustomTaskPath>
    </PropertyGroup>
    <ItemGroup>
      <Content Include="$(CustomTaskPath)**/*.dll;$(CustomTaskPath)**/*.exe;$(CustomTaskPath)**/*.config;$(CustomTaskPath)**/*.json;$(CustomTaskPath)**/*.xml" Exclude="$(CustomTaskPath)**/Microsoft.Build.*">
        <Pack>true</Pack>
        <PackagePath>build/</PackagePath>
      </Content>
      <Content Include="$(BuildRootDir)package/**/*">
        <Pack>true</Pack>
        <PackagePath>build/</PackagePath>
      </Content>
    </ItemGroup>
  </Target>
</Project>
