
type _ {
    __: String
    ___: Boolean
}

type Type {
    string: String
    bool: Boolean
    int: Int
    float: Float
    double: Float
    object: Type
    calculate(string: String,
        bool: Boolean,
        int: Int,
        float: Float,
        double: Float,
        object: String): String
}

type FooBar {
	foo_bar: String
	fooBar: String
}

type Foo {
	foo: String
}

interface Bar {
	bar: String
}

enum Baz {
	BAZ
}

type Safer {
	badValue: String
	bad_value: String
}
