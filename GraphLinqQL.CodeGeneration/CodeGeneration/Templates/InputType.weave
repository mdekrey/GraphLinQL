@model InputObjectTypeContext
@classname InputObjectTypeGenerator
@namespace GraphLinqQL.CodeGeneration.Templates
{{= "" }}
{{if !string.IsNullOrEmpty(model.Description)}}
/// <summary>
/// {{= model.Description.Docblock(indentation) }}
/// </summary>
{{/if}}
[System.CodeDom.Compiler.GeneratedCode("GraphLinqQL", "{{= Generator.Version()}}")]
public class {{= model.TypeName }} : IInputType
{
	{{each field in model.Fields()}}
		{{if !string.IsNullOrEmpty(field.Description)}}
			/// <summary>
			/// {{= field.Description.Docblock(indentation) }}
			/// </summary>
		{{/if}}
		public {{= field.TypeName ?? "object"}} {{= field.PropertyName}} { get; set; }{{if !string.IsNullOrEmpty(field.DefaultValue)}}= {{= field.DefaultValue}};{{/if}}
	{{/each}}

	public void SetValue(string fieldName, Func<Type, object> getValue)
	{
		switch (fieldName)
		{
			{{each field in model.Fields()}}
			case "{{= field.Label }}":
				this.{{= field.PropertyName}} = ({{= field.TypeName ?? "object"}})getValue(typeof({{= field.TypeNameNonNull ?? "object"}}));
				break;
			{{/each}}
		}
	}
}