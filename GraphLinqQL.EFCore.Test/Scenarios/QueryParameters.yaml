scenario: Query Parameters
tests:
  - name: Parameterized Query on a Droid
    given:
      query: |
        {
          droid(id: "2000") {
            name
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "droid": {
                    "name": "C-3PO"
                }
            }
        }
        
  - name: Parameterized Query on a Human
    given:
      query: |
        {
          human(id: "1000") {
            name
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "human": {
                    "name": "Luke Skywalker"
                }
            }
        }
        
  - name: Renaming field on a Droid
    given:
      query: |
        {
          droid(id: "2000") {
            id
            droidName: name
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "droid": {
                    "id": "2000",
                    "droidName": "C-3PO"
                }
            }
        }

  - name: Missing parameter on Droid
    given:
      query: |
        {
          droid {
            name
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
          "errors": [
            {
              "message": "Missing argument \u0022id\u0022 for field \u0022droid\u0022.",
              "errorCode": "missingArgument",
              "locations": [
                {
                  "Line": 2,
                  "Column": 2
                }
              ],
              "arguments": {
                "fieldName": "droid",
                "argument": "id"
              }
            }
          ]
        }

  - name: Parameterized Query with Variables on a Droid
    given:
      query: |
        query ($id: ID!) {
          droid(id: $id) {
            name
          }
        }
      variables:
        id: "2000"
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "droid": {
                    "name": "C-3PO"
                }
            }
        }
        
  - name: Default parameter on a Human
    given:
      query: |
        {
          human(id: "1000") {
            name
            height
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "human": {
                    "name": "Luke Skywalker",
                    "height": 1.72
                }
            }
        }
        
  - name: Inline enum parameter on a Human
    given:
      query: |
        {
          human(id: "1000") {
            name
            height(unit: FOOT)
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "human": {
                    "name": "Luke Skywalker",
                    "height": 5.6430448
                }
            }
        }
        
  - name: Variable enum parameter on a Human
    given:
      query: |
        query ($unit: LengthUnit!) {
          human(id: "1000") {
            name
            height(unit: $unit)
          }
        }
      variables:
        unit: "FOOT"
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "human": {
                    "name": "Luke Skywalker",
                    "height": 5.6430448
                }
            }
        }
        
  - name: More details on a Human
    given:
      query: |
        {
          human(id: "1000") {
            id
            name
            height
            homePlanet
            mass
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
            "data": {
                "human": {
                    "id": "1000",
                    "name": "Luke Skywalker",
                    "height": 1.72,
                    "homePlanet": "Tatooine",
                    "mass": 77
                }
            }
        }
        
  - name: More details on a Human via the Character interface
    given:
      query: |
        {
          character(id: "1000") {
            id
            name
            height
            homePlanet
            mass
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
          "errors": [
            {
              "message": "An unhandled error occurred within resolve method for field \u0022height\u0022 on type \u0022Droid\u0022. See server logs for details.",
              "errorCode": "errorInResolver",
              "locations": [
                {
                  "Line": 5,
                  "Column": 4
                }
              ],
              "arguments": {
                "fieldName": "height",
                "type": "Droid"
              }
            }
          ]
        }
        
  - name: Get friends of a human via the character interface
    given:
      query: |
        {
          character(id: "1000") {
            id
            name
            friends {
                __typename
                id
                name
            }
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
          "data": {
            "character": {
              "id": "1000",
              "name": "Luke Skywalker",
              "friends": [
                {
                  "__typename": "Human",
                  "id": "1002",
                  "name": "Han Solo"
                },
                {
                  "__typename": "Human",
                  "id": "1003",
                  "name": "Leia Organa"
                },
                {
                  "__typename": "Droid",
                  "id": "2000",
                  "name": "C-3PO"
                },
                {
                  "__typename": "Droid",
                  "id": "2001",
                  "name": "R2-D2"
                }
              ]
            }
          }
        }
        
  - name: Get friends of a human and their appearances via the character interface
    given:
      query: |
        {
          character(id: "1001") {
            id
            name
            appearsIn
            friends {
                __typename
                id
                name
                appearsIn
            }
          }
        }
    when:
      execute: true
    then:
      match-result: |
        {
          "data": {
            "character": {
              "id": "1001",
              "name": "Darth Vader",
              "appearsIn": [
                "NEWHOPE",
                "EMPIRE",
                "JEDI"
              ],
              "friends": [
                {
                  "__typename": "Human",
                  "id": "1004",
                  "name": "Wilhuff Tarkin",
                  "appearsIn": [
                    "NEWHOPE"
                  ]
                }
              ]
            }
          }
        }
        